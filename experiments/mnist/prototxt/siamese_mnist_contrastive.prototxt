name: "MNIST"
layer {
  name: "data"
  type: "Data" 
  top: "data"
  include {
    phase: TRAIN
  }
  data_param {
    source: "mnist_train_contrastive_lmdb"
    batch_size: 125 
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Data" 
  top: "data"
  include {
    phase: TEST
    stage: "test-on-train"
  }
  data_param {
    source: "mnist_train_contrastive_lmdb"
    batch_size: 50 
    backend: LMDB
  }
}


layer {
    name: "slice_data"
    type: "Slice"
    bottom: "data"
    top: "data0"
    top: "data1"
    top: "labelx"
    top: "labely"
    top: "labelz"
    slice_param {
      axis: 1
      slice_point: 1 
      slice_point: 2
      slice_point: 3
      slice_point: 4
    }
}

layer {
  name: "argmaxX"
  type: "ArgMax"
  bottom: "labelx"
  top: "simX"
}

layer {
  name: "argmaxY"
  type: "ArgMax"
  bottom: "labely"
  top: "simY"
}

layer {
  name: "argmaxZ"
  type: "ArgMax"
  bottom: "labelz"
  top: "simZ"
}


# First component of siamese network
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data0"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256 
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
} 

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}


layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer{
  name : "flat"
  type: "Flatten"
  bottom: "pool2"
  top: "flat"
}


# Second component of siamese network
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data1"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "conv1_p"
  top: "conv1_p"
}

layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256 
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
} 

layer {
  name: "relu2_p"
  type: "ReLU"
  bottom: "conv2_p"
  top: "conv2_p"
}


layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer{
  name : "flat_p"
  type: "Flatten"
  bottom: "pool2_p"
  top: "flat_p"
}

layer {
  name: "loss_x"
  type: "ContrastiveLoss"
  contrastive_loss_param {
    margin: 10.0
  }
  bottom: "flat"
  bottom: "flat_p"
  bottom: "simX"
  top: "loss_x"
  include {
    phase: TRAIN
  }
}

layer {
  name: "loss_y"
  type: "ContrastiveLoss"
  contrastive_loss_param {
    margin: 10.0
  }
  bottom: "flat"
  bottom: "flat_p"
  bottom: "simY"
  top: "loss_y"
  include {
    phase: TRAIN
  }
}

layer {
  name: "loss_z"
  type: "ContrastiveLoss"
  contrastive_loss_param {
    margin: 10.0
  }
  bottom: "flat"
  bottom: "flat_p"
  bottom: "simZ"
  top: "loss_z"
  include {
    phase: TRAIN
  }
}
