name: "MNIST"
layer {
  name: "data"
  type: "Data" 
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "../../data/mnist_train_contrastive_lmdb"
    batch_size: 512 
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Data" 
  top: "data"
  top: "label"
  include {
    phase: TEST
    stage: "test-on-train"
  }
  data_param {
    source: "../../data/mnist_train_contrastive_lmdb"
    batch_size: 50 
    backend: LMDB
  }
}


layer {
    name: "slice_data"
    type: "Slice"
    bottom: "data"
    top: "data0"
    top: "data1"
    slice_param {
      axis: 1
      slice_point: 1 
    }
}


# First component of siamese network
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data0"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256 
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
} 

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}


layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


# Second component of siamese network
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data1"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "conv1_p"
  top: "conv1_p"
}

layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256 
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
} 

layer {
  name: "relu2_p"
  type: "ReLU"
  bottom: "conv2_p"
  top: "conv2_p"
}


layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}





##### OUTPUT
## FIRST COMPONENT
layer {
  bottom: "pool2"
  top: "ip1"
  name: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 500 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "ip1relu"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer {
  bottom: "ip1"
  top: "ip1_2"
  name: "ip1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "ip1_2"
  top: "feat"
  name: "feat"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 2 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


## SECOND COMPONENT
layer {
  bottom: "pool2_p"
  top: "ip2"
  name: "ip2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 500 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "ip2relu"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}

layer {
  bottom: "ip2"
  top: "ip2_2"
  name: "ip2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "ip2_2"
  top: "feat_p"
  name: "feat_p"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 2 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}




#### LOSS
layer {
  name: "contrastive_loss"
  type: "ContrastiveLoss"
  contrastive_loss_param {
    margin: 100.0
  }
  bottom: "feat"
  bottom: "feat_p"
  bottom: "label"
  top: "contrastive_loss"
  include {
    phase: TRAIN
  }
}
